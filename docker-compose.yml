version: '3.4'

services:
  api:
    image: ${DOCKER_REGISTRY-}gorilaapi
    build:
      context: .
      dockerfile: src/Gorila.API/Dockerfile.Local
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
    ports:
      - '5000:5000'
      - '5001:5001'
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - db
    restart: on-failure

  db:
    image: 'postgres:13-alpine'
    environment:
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_DB=gorilaDb'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  ui:
    image: gorilaui
    build:
      context: .
      dockerfile: src/Gorila.UI/Dockerfile
    ports:
      - '8081:8081'
    volumes:
      - ./src/Gorila.UI:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

  functions:
    image: gorilafunctions
    build:
      context: .
      dockerfile: src/Gorila.FunctionApp/Dockerfile
    ports:
      - '8080:80'
