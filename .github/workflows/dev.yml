name: Deploy to dev environment

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  deploy-frontend:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/Gorila.UI
    steps:
      - name: üöö Get code
        uses: actions/checkout@v2

      - name: üìù Replace .env tokens
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: 'src/Gorila.UI/.env'
        env:
          API_URL: https://gorila-be.herokuapp.com

      - name: üî® Build
        run: |
          npm install
          npm run build

      - name: üìÇ Copy files through FTP
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_GORILA_DEV_SERVER }}
          username: ${{ secrets.FTP_GORILA_DEV_USERNAME }}
          password: ${{ secrets.FTP_GORILA_DEV_PASSWORD }}
          local-dir: ./src/Gorila.UI/dist/

  deploy-backend:
    name: Build and deploy backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/Gorila.API
    steps:
      - name: üöö Get code
        uses: actions/checkout@v2

      - name: üìù Replace appsettings tokens
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: 'src/Gorila.API/appsettings.json'
        env:
          CONNECTION_STRING: ${{ secrets.HEROKU_POSTGRES_CONNECTION_STRING }}

      - name: üê≥ Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          usedocker: true
          appdir: 'src/Gorila.API'
